#!/usr/bin/env node

const app = require('../../app');
const debug = require('../config/debug-config')('www');
const https = require('https');
const fs = require('fs')
const path = require('path')


const port = process.env.APPLICATION_PORT || process.env.DEFAULT_PORT
app.set('port', port);

let certs
try{
    debug.msg(`loading ssl credentials`)
    certs = {
        key: fs.readFileSync(path.join(__dirname, 'certs', 'key.pem')),
        cert: fs.readFileSync(path.join(__dirname, 'certs', 'certificate.pem')),
    }
} catch (error){
    debug.error("Failed loading SSL credentials\n", error)
    process.exit(1)
}
debug.msg('successfully loaded ssl credentials')



// Start Server
debug.msg("building https server")
const server = https.createServer(certs, app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);



function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  switch (error.code) {
    case 'EACCES':
      debug.error(`Binding to port (${port}) requires elevated privileges`);
      process.exit(1);
    case 'EADDRINUSE':
      debug.error(`Port (${port}) is already in use`);
      process.exit(1);
    default:
      throw error;
  }
}


function onListening() {
    const addr = server.address();
    const bound_addr = addr.address === "::" ? 'localhost' : addr.address;

    debug.msg(`server listening on https://${bound_addr}:${addr.port}`);
}
